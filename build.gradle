apply plugin: 'java'
apply plugin: 'maven'

group = 'net.techguard'

description = "This plugin allow you to setup custom zones for example shops, pvp areas or spawn."

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

buildscript {
	repositories {
		jcenter()
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		//classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
		classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
	}
}

repositories {
	maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
	maven { url "http://nexus.hc.to/content/repositories/pub_releases/" }
	maven { url "https://jitpack.io" }
	maven { url "https://repo.maven.apache.org/maven2" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	maven { url "https://repo.inventivetalent.org/content/groups/public/" }
}

dependencies {
	compile group: 'com.github.InventivetalentDev', name: 'ReflectionHelper', version:'1.15.2-SNAPSHOT'
	compile group: 'com.github.InventivetalentDev', name: 'ParticleAPI', version:'65b701708a'
	compile group: 'com.github.InventiveTalentDev', name:'BossBarAPI', version:'2.4.3-SNAPSHOT'
	compile group: 'org.spigotmc', name: 'spigot-api', version:'1.16.5-R0.1-SNAPSHOT'
	compile group: 'net.milkbowl.vault', name: 'VaultAPI', version:'1.7'
}

apply plugin: "com.github.johnrengelman.shadow"

shadowJar {
    archiveName = "${baseName}.${extension}"

	dependencies {
		include(dependency('com.github.InventivetalentDev:ReflectionHelper'))
		include(dependency('com.github.InventivetalentDev:ParticleAPI'))
		include(dependency('com.github.InventivetalentDev:BossBarAPI'))
	}

	relocate 'org.inventivetalent.bossbar', 'net.techguard.izone.Utils.BossBarAPI'
	relocate 'org.inventivetalent.particle', 'net.techguard.izone.Utils.ParticleAPI'
	relocate 'org.inventivetalent.reflection', 'net.techguard.izone.Utils.ReflectionHelper'
}

task copyFile(type: Copy) {
    from('build/libs')
    into('target')
    include('iZone.jar')
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

assemble.dependsOn(shadowJar)
assemble.finalizedBy(copyFile)
